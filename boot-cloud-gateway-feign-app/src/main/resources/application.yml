server:
  port: 8093

spring:
  application:
    name: spring-cloud-gateway-feign-custom-consumer-application
  profiles:
    active: gateway-consumer1

# defaultZone让客户端知道去哪里注册服务
eureka:
  client:
    serviceUrl:
      # defaultZone: http://eureka1:8001/eureka,http://eureka2:8002/eureka,http://eureka3:8003/eureka
      defaultZone: http://localhost:8000/eureka
    fetch-registry: true # 从eureka服务中获取服务列表
    register-with-eureka: false # 不将自己注册到eureka中
  instance:
    hostname: spring-cloud-feign-custom-consumer-application

# feign配置
feign:
  hystrix:
    enabled: true
  client:
    config:
      spring-cloud-provider-application: # 此处指定client的名称，这样可以隔离每个client的配置；如果指定为default，则所有的client都使用该配置
        loggerLevel: FULL # 一定要将项目的日志修改成debug模式才可以看到请求响应日志输出，其他配置参考FeignClientProperties.FeignClientConfiguration
        connectTimeout: 3000 # 如果指定了feign的connectTimeout，会覆盖ribbon的connectTimeout；参考：LoadBalancerFeignClient.execute
        readTimeout: 2000 # 如果指定了feign的readTimeout，会覆盖ribbon的readTimeout；参考：LoadBalancerFeignClient.execute
  okhttp: # 开启okHttp
    enabled: true

# 日志
logging:
  level:
    root: info

# hystrix，参考地址：https://github.com/Netflix/Hystrix/wiki/Configuration#circuitBreaker.requestVolumeThreshold
hystrix:
  command: # 参考HystrixCommandProperties
    default: # 设置HystrixCommandKey，此处为默认；针对每个方法指定PersonClient#savePerson(Person)
      circuitBreaker:
        enabled: true # 开始熔断器
        errorThresholdPercentage: 50
        requestVolumeThreshold: 5
        sleepWindowInMilliseconds: 2
      execution:
        isolation:
          strategy: THREAD # 使用线程隔离策略
          thread:
            interruptOnTimeout: true # 表示是否在执行超时时，中断HystrixCommand.run() 的执行
            timeoutInMilliseconds: 20000 # 调用者超时时间，可以在 feign.hystrix.HystrixInvocationHandler.invoke方法中的return HystrixInvocationHandler.this.dispatch.get(method).invoke(args);打上断点调用接口方法进行验证
        timeout:
          enabled: true #是否开启超时设置
      fallback:
        enabled: true
  threadpool: # 参考HystrixThreadPoolProperties
    default:
      coreSize: 5 # 核心线程数
      keepAliveTimeMinutes: 60 # 线程存活时长
      maxQueueSize: 1024 # 队列大小
      maximumSize: 5 # 最大线程数
      queueSizeRejectionThreshold: 128 # 拒绝请求队列大小限制值，当队列大小超过限制值，拒绝请求

# ribbon
spring-cloud-provider-application:
  ribbon:
    ConnectTimeout: 4000 # 此处的配置会被feign覆盖
    ReadTimeout: 4000 # 此处的配置会被feign覆盖
    # OkToRetryOnAllOperations: true # 所有的请求都会进行重试，post、put接口需要注意幂等操作
    # MaxAutoRetries: 1 # 当前机器重试次数，不包括第一次
    # MaxAutoRetriesNextServer: 1 # 其它机器重试最大次数
    # 总的重试次数为：MaxAutoRetries + MaxAutoRetriesNextServer + (MaxAutoRetries * MaxAutoRetriesNextServer)
    # 总的执行次数为：总的重试次数 + 1(首次调用)
    # 如果配置重试，那么hystrix的超时时间 = 总的执行次数 * (feign的connectionTimeout + feign的readTimeout)

---
server:
  port: 8093
spring:
  config:
    activate:
      on-profile: gateway-consumer1
---
server:
  port: 8094
spring:
  config:
    activate:
      on-profile: gateway-consumer2
---
server:
  port: 8095
spring:
  config:
    activate:
      on-profile: gateway-consumer3